name: Build All ESP32 Boards

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        environment:
          # ESP32-S2 boards (Native USB HID)
          - esp32-s2-flipper
          - esp32-s2-saola-1
          - esp32-s2-devkitm-1
          - adafruit_feather_esp32s2
          - um_feathers2
          
          # ESP32-S3 boards (Native USB HID)
          - esp32-s3-devkitc-1
          - esp32-s3-devkitc-1-n8r8
          - adafruit_feather_esp32s3
          - um_tinys3
          - lilygo-t-display-s3
          
          # ESP32 Classic (no native USB)
          - esp32dev
          
          # ESP32-C3 boards (no native USB)
          - esp32-c3-devkitm-1
          - esp32-c3-devkitc-02
          - seeed_xiao_esp32c3
          
          # ESP32-C6 boards (no native USB)
          - esp32-c6-devkitc-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache PlatformIO
        uses: actions/cache@v4
        with:
          path: |
            ~/.platformio
            .pio
          key: ${{ runner.os }}-pio-${{ hashFiles('**/platformio.ini') }}
          restore-keys: |
            ${{ runner.os }}-pio-

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install platformio

      - name: Create config placeholder
        run: |
          mkdir -p config
          if [ ! -f config/wifi_credentials.h ]; then
            echo '#define WIFI_SSID "placeholder"' > config/wifi_credentials.h
            echo '#define WIFI_PASSWORD "placeholder"' >> config/wifi_credentials.h
          fi

      - name: Build ${{ matrix.environment }}
        run: platformio run -e ${{ matrix.environment }}

      - name: Upload firmware artifact
        uses: actions/upload-artifact@v4
        with:
          name: firmware-${{ matrix.environment }}
          path: .pio/build/${{ matrix.environment }}/firmware.bin
          if-no-files-found: warn

  build-summary:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Build Summary
        run: |
          echo "## Build Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Build job completed. Check individual job results above." >> $GITHUB_STEP_SUMMARY
